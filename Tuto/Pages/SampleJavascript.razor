@page "/sample-javascript"
@inject IJSRuntime jsRuntime
<h3>Sample Javascript</h3>

<span>@confirmResult</span>

<button @onclick="ShowAlert">Alert</button>
<button @onclick="ShowConfirm">Display Confirm</button>
<button onclick="callMethod()">Call Method</button>
<button @onclick="CallInvokeMethodJavascript">Call Instance Method</button>
@code {
    private string confirmResult;
    private void ShowAlert()
    {
        jsRuntime.InvokeVoidAsync("alert", "Hello World from Method");
    }

    private async Task ShowConfirm()
    {
        var result = await jsRuntime.InvokeAsync<bool>("confirm", "Do you need to proceed ?");
        confirmResult = result.ToString();
    } 

    private async Task CallInvokeMethodJavascript()
    {
        var sampleJsReference = await jsRuntime.InvokeAsync<IJSObjectReference>("import", "./JS/sample.js");
        var contact = new Contact { FirstName = "John", LastName = "Peter", Email = "JP@gmail.com" };
        // jsRuntime.InvokeVoidAsync("callInstanceMethod", DotNetObjectReference.Create(this));
        await sampleJsReference.InvokeVoidAsync("callInstanceMethod", DotNetObjectReference.Create(this));
    }

    [JSInvokable]
    public async Task<string> GetValueFromInstance()
    {
        return "Hello World from Instance";
    }

    [JSInvokable]
    public static Task<string> GetValueFromMethod()
    {
        return Task.FromResult<string>("Hello World");
    }
}
